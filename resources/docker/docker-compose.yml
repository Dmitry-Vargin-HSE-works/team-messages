version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: myzookeeper
    ports:
      - "2181:2181"
    networks:
      - spring_chat

  kafka:
    image: wurstmeister/kafka
    container_name: mykafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "main:1:1"
    ports:
      - "9092:9092"
    networks:
      - spring_chat
    depends_on:
      - zookeeper
    volumes:
      - ./kafka:/data/kafka

  mongo:
    image: mongo
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=mongo
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - spring_chat

  app:
    image: dimitryvargin/spring-chat
    container_name: springchat
    ports:
    - "8080:8080"
    networks:
      - spring_chat
    depends_on:
      - kafka
      - mongo

networks:
  spring_chat:
    driver: bridge